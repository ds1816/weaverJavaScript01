(function($) {
    $.fn.clockTimePicker = function(K) {
        var L = $.extend({
            afternoonHoursInOuterCircle: false,
            colors: {
                buttonTextColor: '#0797FF',
                clockFaceColor: '#EEEEEE',
                clockInnerCircleTextColor: '#888888',
                clockOuterCircleTextColor: '#000000',
                hoverCircleColor: '#DDDDDD',
                popupBackgroundColor: '#FFFFFF',
                popupHeaderBackgroundColor: '#0797FF',
                popupHeaderTextColor: '#FFFFFF',
                selectorColor: '#0797FF',
                selectorNumberColor: '#FFFFFF'
            },
            fonts: {
                fontFamily: 'Arial',
                clockOuterCircleFontSize: 14,
                clockInnerCircleFontSize: 12,
                buttonFontSize: 20
            },
            i18n: {
                okButton: 'OK',
                cancelButton: 'Cancel'
            },
            modeSwitchSpeed: 500,
            onChange: function(a, b) {},
            onClose: function() {},
            onModeSwitch: function() {},
            onOpen: function() {},
            popupWidthOnDesktop: 200,
            vibrate: true
        }, K);

        //if($(this).parent(".c-datepicker-picker__right").length >= 1) return;//由于OA系统会重复3次进入此函数，所以需要在此加一个判断

        return this.each(function() {
            if (!('vibrate' in navigator)) L.vibrate = false;
            var j = $(this);
            var k = j.val();
            j.val(formatTime(k));
            var l = j[0].onchange;
            j[0].onchange = '';
            var n = 'HOUR';
            var o = false;
            var p = false;
            var q = L.popupWidthOnDesktop;
            var r = q - 20;
            var t = parseInt(r / 2);
            var u = parseInt(r / 2);
            var v = parseInt(r / 2);
            var w = t - 16;
            var z = w - 29;
            var C = $(this).parents(".c-datepicker-picker__body").find(".base");
            C.wrap('<div class="c-datepicker-picker__right" style="display:inline-block;">');
            C.css('cursor', 'default').css('backgroundColor', L.colors.popupBackgroundColor);
            j.on('keyup', function(a) {
                var b = formatTime(j.val());
                if ((a.keyCode >= 48 && a.keyCode <= 57) && (j[0].selectionStart == 2 || (new RegExp('^[0-9]{2}:$').test(j.val())) || j.val().length == 5)) {
                    j.val(b);
                    switchToMinuteMode();
                } else if ((a.keyCode == 8 || a.keyCode == 46) && j.val() && j.val()[j.val().length - 1] == ':') {
                    b = formatTime(j.val() + '00');
                    j.val(b);
                } else if ((a.keyCode == 8 || a.keyCode == 46) && j.val() && j.val()[0] == ':') {
                    b = formatTime('00' + j.val());
                    j.val(b);
                }
                if (k != b) {
                    repaintClock();
                    L.onChange(b, k);
                    if (l) l(a)
                }
            });
            j.on('keydown', function(a) {
                k = formatTime(j.val());
                if (a.keyCode >= 48 && a.keyCode <= 57) {
                    if (j.val().length == 5 && j[0].selectionStart == 5 && a.keyCode != 8) {
                        a.preventDefault();
                        return false
                    }
                } else if (a.keyCode == 9) {} else if (a.keyCode == 13) {
                    hideTimePicker();
                    j.trigger('blur')
                } else if (a.keyCode == 27) {
                    hideTimePicker();
                    j.trigger('blur')
                } else if (a.keyCode == 8 || a.keyCode == 46) {
                    if (j[0].selectionStart == 0 && j[0].selectionEnd == 2) {
                        a.preventDefault();
                        if (j.val().substring(0, 2) == '00') {
                            j.val('');
                            switchToHourMode()
                        } else {
                            j.val('00:' + j.val().substring(3));
                        }
                    } else if (j[0].selectionStart == 3 && j[0].selectionEnd == 5) {
                        a.preventDefault();
                        if (j.val().substring(3) == '00') {
                            if (j.val() == '00:00') j.val('');
                            switchToHourMode();
                        } else {
                            j.val(j.val().substring(0, 2) + ':00');
                        }
                    }
                } else if ((a.keyCode == 36 || a.keyCode == 37) && j.val() != '') {
                    j.val(formatTime(j.val()));
                    switchToHourMode()
                } else if ((a.keyCode == 35 || a.keyCode == 39) && j.val() != '') {
                    j.val(formatTime(j.val()));
                    switchToMinuteMode()
                } else if (a.keyCode == 190) {
                    a.preventDefault();
                    if (j.val().length == 0) j.val('0');
                    j.val(formatTime(j.val()));
                    switchToMinuteMode()
                } else if (a.keyCode == 38 || a.keyCode == 40) {
                    a.preventDefault();
                    if (k == '') return;
                    (new RegExp('^([0-9]{1,2})(:([0-9]{1,2}))?$')).test(j.val());
                    var h = parseInt(RegExp.$1);
                    var m = RegExp.$3 ? parseInt(RegExp.$3) : 0;
                    if (n == 'HOUR') {
                        if (a.keyCode == 38) h -= 1;
                        else h += 1; if (h == -1) h = 23;
                        if (h == 24) h = 0
                    } else {
                        if (a.keyCode == 38) m -= 1;
                        else m += 1; if (m == -1) m = 59;
                        if (m == 60) m = 0
                    }
                    j.val((h < 10 ? '0' : '') + h + ':' + (m < 10 ? '0' : '') + m);
                    repaintClock();
                } else {
                    a.preventDefault()
                }
            });
            j.on('mousewheel', function(a) {
                processMouseWheelEvent(a);
            });
            j.on('change', function(a) {
                repaintClock();
            });
            C.on('dragenter', function(a) {
                a.stopImmediatePropagation();
                a.preventDefault();
                return false
            });
            C.on('dragover', function(a) {
                a.stopImmediatePropagation();
                a.preventDefault();
                return false
            });
            C.on('drop', function(a) {
                a.stopImmediatePropagation();
                a.preventDefault();
                return false
            });
            C.on('click', function(a) {
                processClick(a);
            });
            C.on('contextmenu', function(a) {
                a.stopImmediatePropagation();
                a.preventDefault();
                processClick(a);
                return false
            });
            var D = '<div style="position: relative; width: ' + r + 'px; height: ' + r + 'px; margin: 10px 10px"><canvas class="canvas1" width="' + r + '" height="' + r + '" style="cursor: default; position: absolute; top: 0px; left: 0px;"></canvas><canvas class="canvas2" width="' + r + '" height="' + r + '" style="cursor: default; position: absolute; top: 0px; left: 0px; display: none;"></canvas></div>';
            C.append(D);

            var D = $(C).find(".canvas1").parent();
            var E = $(C).find(".canvas1");
            registerDraggingEventsOnCanvas(E);
            var F = $(C).find(".canvas2");
            registerDraggingEventsOnCanvas(F);
            repaintClockHourCanvas();

            function processClick(a) {
                if (p) return;
                if (j[0].selectionStart >= 3) {
                    if (n == 'HOUR' && L.vibrate) navigator.vibrate(10);
                    switchToMinuteMode();
                } else {
                    if (n == 'MINUTE' && L.vibrate) navigator.vibrate(10);
                    switchToHourMode();
                }
            }

            function processMouseWheelEvent(a) {
                if (!((j[0].selectionStart == 0 && j[0].selectionEnd == 2) || (j[0].selectionStart == 3 && j[0].selectionEnd == 5))) return;
                var e = window.event || a;
                var b = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));
                (new RegExp('^([0-9]{1,2})(:([0-9]{1,2}))?$')).test(C.val());
                var h = parseInt(RegExp.$1);
                var m = RegExp.$3 ? parseInt(RegExp.$3) : 0;
                if (n == 'HOUR') {
                    h += b;
                    if (h == -1) h = 23;
                    if (h == 24) h = 0
                } else {
                    m += b;
                    if (m == -1) m = 59;
                    if (m == 60) m = 0
                }
                j.val((h < 10 ? '0' : '') + h + ':' + (m < 10 ? '0' : '') + m);
                repaintClock();
            }

            function registerDraggingEventsOnCanvas(b) {
                b.on('mousedown', function(a) {
                    var x = a.pageX - $(this).offset().left;
                    var y = a.pageY - $(this).offset().top;
                    processTimeSelection(x, y);
                    o = true
                });
                b.on('mouseup', function(a) {
                    o = false;
                    var x = a.pageX - $(this).offset().left;
                    var y = a.pageY - $(this).offset().top;
                    if (!processTimeSelection(x, y, true)) return false;
                    if(n == 'HOUR') switchToMinuteMode();
                    else switchToHourMode(a);
                });
                b.on('mousemove', function(a) {
                    var x = a.pageX - $(this).offset().left;
                    var y = a.pageY - $(this).offset().top;
                    processTimeSelection(x, y)
                });
                b.on('mouseleave', function(a) {
                    if (n == 'HOUR') repaintClockHourCanvas();
                    else repaintClockMinuteCanvas()
                });
                b.on('mousewheel', function(a) {
                    processMouseWheelEvent(a)
                })
            }

            function processTimeSelection(x, y, a) {
                var b = (360 * Math.atan((y - v) / (x - u)) / (2 * Math.PI)) + 90;
                var c = Math.sqrt(Math.pow(Math.abs(x - u), 2) + Math.pow(Math.abs(y - v), 2));
                var d = 0;
                var e = 0;
                if ((new RegExp('^([0-9]{2}):([0-9]{2})$')).test(j.val())) {
                    d = parseInt(RegExp.$1);
                    e = parseInt(RegExp.$2)
                }
                if (n == 'HOUR') {
                    b = Math.round(b / 30);
                    var h = -1;
                    if (c < t + 10 && c > t - 28) {
                        if (x - u >= 0) {
                            if (b == 0) h = 12;
                            else h = b
                        } else if (x - u < 0) {
                            h = b + 6
                        }
                    } else if (c < t - 28 && c > t - 65) {
                        if (x - u >= 0) {
                            if (b != 0) h = b + 12;
                            else h = 0
                        } else if (x - u < 0) {
                            h = b + 18;
                            if (h == 24) h = 0
                        }
                    }
                    if (h > -1) {
                        var f = (h < 10 ? '0' : '') + h + ':' + (e < 10 ? '0' : '') + e;
                        if (o || a) {
                            var g = j.val();
                            if (f != g && L.vibrate) navigator.vibrate(10);
                            j.val(f);
                            if (f != g) {
                                setTimeout(function() {
                                    L.onChange(f, g);
                                    if (l) l(event)
                                }, 10)
                            }
                        }
                        repaintClockHourCanvas(h == 0 ? 24 : h);
                        return true
                    } else {
                        repaintClockHourCanvas();
                        return false
                    }
                } else if (n == 'MINUTE') {
                    b = Math.round(b / 6);
                    var m = -1;
                    if (c < t + 10 && c > t - 40) {
                        if (x - u >= 0) {
                            m = b
                        } else if (x - u < 0) {
                            m = b + 30;
                            if (m == 60) m = 0
                        }
                    }
                    if (m > -1) {
                        var f = (d < 10 ? '0' : '') + d + ':' + (m < 10 ? '0' : '') + m;
                        if (o || a) {
                            var g = j.val();
                            if (f != g && L.vibrate) navigator.vibrate(10);
                            j.val(f);
                            if (f != g) {
                                setTimeout(function() {
                                    L.onChange(f, g);
                                    if (l) l(event)
                                }, 10)
                            }
                        }
                        repaintClockMinuteCanvas(m == 0 ? 60 : m);
                        return true
                    } else {
                        repaintClockMinuteCanvas();
                        return false
                    }
                }
            }

            function repaintClock() {
                if (n == 'HOUR') {
                    repaintClockHourCanvas()
                } else {
                    repaintClockMinuteCanvas()
                }
            }
            function repaintClockHourCanvas(a) {
                var time = j.val();
                var b = E.get(0).getContext('2d');
                (new RegExp('^([0-9]{1,2}):([0-9]{1,2})$')).test(time);
                var c = parseInt(RegExp.$1);
                if (c == 0) c = 24;
                if (!time) c = -1;
                b.clearRect(0, 0, r, r);
                b.beginPath();
                b.arc(u, v, t, 0, 2 * Math.PI, false);
                b.fillStyle = L.colors.clockFaceColor;
                b.fill();
                if (a) {
                    b.beginPath();
                    b.arc(u + Math.cos(Math.PI / 6 * ((a % 12) - 3)) * (a > 12 ? (L.afternoonHoursInOuterCircle ? w : z) : (L.afternoonHoursInOuterCircle ? z : w)), v + Math.sin(Math.PI / 6 * ((a % 12) - 3)) * (a > 12 ? (L.afternoonHoursInOuterCircle ? w : z) : (L.afternoonHoursInOuterCircle ? z : w)), 15, 0, 2 * Math.PI, false);
                    b.fillStyle = L.colors.hoverCircleColor;
                    b.fill()
                }
                b.beginPath();
                b.arc(u, v, 3, 0, 2 * Math.PI, false);
                b.fillStyle = L.colors.selectorColor;
                b.fill();
                if (c > -1) {
                    b.beginPath();
                    b.moveTo(u, v);
                    b.lineTo(u + Math.cos(Math.PI / 6 * ((c % 12) - 3)) * (c > 12 ? (L.afternoonHoursInOuterCircle ? w : z) : (L.afternoonHoursInOuterCircle ? z : w)), v + Math.sin(Math.PI / 6 * ((c % 12) - 3)) * (c > 12 ? (L.afternoonHoursInOuterCircle ? w : z) : (L.afternoonHoursInOuterCircle ? z : w)));
                    b.lineWidth = 1;
                    b.strokeStyle = L.colors.selectorColor;
                    b.stroke();
                    b.beginPath();
                    b.arc(u + Math.cos(Math.PI / 6 * ((c % 12) - 3)) * (c > 12 ? (L.afternoonHoursInOuterCircle ? w : z) : (L.afternoonHoursInOuterCircle ? z : w)), v + Math.sin(Math.PI / 6 * ((c % 12) - 3)) * (c > 12 ? (L.afternoonHoursInOuterCircle ? w : z) : (L.afternoonHoursInOuterCircle ? z : w)), 15, 0, 2 * Math.PI, false);
                    b.fillStyle = L.colors.selectorColor;
                    b.fill()
                }
                b.font = L.fonts.clockOuterCircleFontSize + 'px ' + L.fonts.fontFamily;
                for (i = 1; i <= 12; i++) {
                    var d = Math.PI / 6 * (i - 3);
                    var s = i;
                    if (L.afternoonHoursInOuterCircle) {
                        s = i + 12;
                        if (c == i + 12) b.fillStyle = L.colors.selectorNumberColor;
                        else b.fillStyle = L.colors.clockInnerCircleTextColor; if (s == 24) s = '00'
                    } else {
                        if (c == i) b.fillStyle = L.colors.selectorNumberColor;
                        else b.fillStyle = L.colors.clockOuterCircleTextColor
                    }
                    b.fillText(s, u + Math.cos(d) * w - (b.measureText(s).width / 2), v + Math.sin(d) * w + (L.fonts.clockOuterCircleFontSize / 3))
                }
                b.font = L.fonts.clockInnerCircleFontSize + 'px ' + L.fonts.fontFamily;
                for (i = 1; i <= 12; i++) {
                    var d = Math.PI / 6 * (i - 3);
                    var s = i;
                    if (!L.afternoonHoursInOuterCircle) {
                        s = i + 12;
                        if (c == i + 12) b.fillStyle = L.colors.selectorNumberColor;
                        else b.fillStyle = L.colors.clockInnerCircleTextColor; if (s == 24) s = '00'
                    } else {
                        if (c == i) b.fillStyle = L.colors.selectorNumberColor;
                        else b.fillStyle = L.colors.clockOuterCircleTextColor
                    }
                    b.fillText(s, u + Math.cos(d) * z - (b.measureText(s).width / 2), v + Math.sin(d) * z + (L.fonts.clockInnerCircleFontSize / 3))
                }
            }
            function repaintClockMinuteCanvas(a) {
                var b = F.get(0).getContext('2d');
                (new RegExp('^([0-9]{1,2}):([0-9]{1,2})$')).test(j.val());
                var c = parseInt(RegExp.$2);
                if (!j.val()) c = -1;
                b.clearRect(0, 0, r, r);
                b.beginPath();
                b.arc(u, v, t, 0, 2 * Math.PI, false);
                b.fillStyle = L.colors.clockFaceColor;
                b.fill();
                if (a) {
                    if (a == 60) a = 0;
                    b.beginPath();
                    b.arc(u + Math.cos(Math.PI / 6 * ((a / 5) - 3)) * w, v + Math.sin(Math.PI / 6 * ((a / 5) - 3)) * w, 15, 0, 2 * Math.PI, false);
                    b.fillStyle = L.colors.hoverCircleColor;
                    b.fill()
                }
                b.beginPath();
                b.arc(u, v, 3, 0, 2 * Math.PI, false);
                b.fillStyle = L.colors.selectorColor;
                b.fill();
                if (c > -1) {
                    b.beginPath();
                    b.moveTo(u, v);
                    b.lineTo(u + Math.cos(Math.PI / 6 * ((c / 5) - 3)) * w, v + Math.sin(Math.PI / 6 * ((c / 5) - 3)) * w);
                    b.lineWidth = 1;
                    b.strokeStyle = L.colors.selectorColor;
                    b.stroke();
                    b.beginPath();
                    b.arc(u + Math.cos(Math.PI / 6 * ((c / 5) - 3)) * w, v + Math.sin(Math.PI / 6 * ((c / 5) - 3)) * w, 15, 0, 2 * Math.PI, false);
                    b.fillStyle = L.colors.selectorColor;
                    b.fill()
                }
                b.font = L.fonts.clockOuterCircleFontSize + 'px ' + L.fonts.fontFamily;
                for (i = 1; i <= 12; i++) {
                    var d = Math.PI / 6 * (i - 3);
                    if (c == i * 5 || (c == 0 && i == 12)) b.fillStyle = L.colors.selectorNumberColor;
                    else b.fillStyle = L.colors.clockOuterCircleTextColor;
                    var s = i * 5 == 5 ? '05' : i * 5;
                    if (s == 60) s = '00';
                    b.fillText(s, u + Math.cos(d) * w - (b.measureText(s).width / 2), v + Math.sin(d) * w + (L.fonts.clockOuterCircleFontSize / 3))
                }
                if (c > -1 && c % 5 != 0) {
                    b.beginPath();
                    b.arc(u + Math.cos(Math.PI / 6 * ((c / 5) - 3)) * w, v + Math.sin(Math.PI / 6 * ((c / 5) - 3)) * w, 2, 0, 2 * Math.PI, false);
                    b.fillStyle = 'white';
                    b.fill()
                }
            }

            function switchToHourMode(a) {
                if (n == 'HOUR') return;
                repaintClockHourCanvas();
                if (a) {
                    F.css('display', 'none')
                } else {
                    F.stop().animate({
                        opacity: 0,
                        zoom: '80%',
                        left: '10%',
                        top: '10%'
                    }, L.modeSwitchSpeed, function() {
                        F.css('display', 'none')
                    })
                }
                E.stop().css('zoom', '100%').css('left', '0px').css('top', '0px').css('display', 'block').css('opacity', 1).css('zIndex', 1);
                n = 'HOUR';
                L.onModeSwitch(n);
                j[0].selectionStart = 0;
            }
            function switchToMinuteMode() {
                if (n == 'MINUTE') return;
                repaintClockMinuteCanvas();
                F.stop().css('display', 'block').css('zoom', '80%').css('left', '10%').css('top', '10%').css('opacity', 0).css('zIndex', 1).animate({
                    opacity: 1,
                    zoom: '100%',
                    left: '0px',
                    top: '0px'
                });
                n = 'MINUTE';
                L.onModeSwitch(n);
            }

            function formatTime(a) {
                if (a == '') return a;
                if ((new RegExp('^([0-9]{1,2})(:([0-9]{1,2}))?')).test(a)) {
                    var b = parseInt(RegExp.$1);
                    var c = parseInt(RegExp.$3);
                    if (b >= 24) b = b % 24;
                    if (c >= 60) c = c % 60;
                    a = (b < 10 ? '0' : '') + b + ':' + (RegExp.$3 ? (c < 10 ? '0' : '') + c : '00')
                } else if ((new RegExp('^:([0-9]{1,2})')).test(a)) {
                    var c = parseInt(RegExp.$1);
                    if (c >= 60) c = c % 60;
                    a = '00:' + (c < 10 ? '0' : '') + c
                } else {
                    a = '00:00'
                }
                return a
            }
        });
    }
}(jQuery));